services:
  # PostgreSQL Database
  - type: pserv
    name: msmebazaar-postgres
    env: docker
    plan: standard
    region: oregon
    envVars:
      - key: POSTGRES_DB
        value: msmebazaar
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        generateValue: true
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 20

  # Redis Cache
  - type: redis
    name: msmebazaar-redis
    plan: standard
    region: oregon
    maxmemoryPolicy: allkeys-lru

  # Next.js Web Frontend
  - type: web
    name: msmebazaar-web
    env: node
    region: oregon
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/web
      npm ci
      npm run build
    startCommand: |
      cd msmebazaar-v2/apps/web
      npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXTAUTH_URL
        value: https://msmebazaar-web.onrender.com
      - key: NEXTAUTH_SECRET
        generateValue: true
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString
      - key: AUTH_API_URL
        value: https://msmebazaar-auth-api.onrender.com
      - key: MSME_API_URL
        value: https://msmebazaar-msme-api.onrender.com

  # Admin Dashboard Frontend
  - type: web
    name: msmebazaar-admin
    env: node
    region: oregon
    plan: standard
    buildCommand: |
      cd admin-dashboard/backend
      npm ci
      npm run build
    startCommand: |
      cd admin-dashboard/backend
      npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: ADMIN_SECRET_KEY
        generateValue: true

  # Authentication API (FastAPI)
  - type: web
    name: msmebazaar-auth-api
    env: python
    region: oregon
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/auth-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/auth-api
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /healthz
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_ALGORITHM
        value: HS256
      - key: JWT_EXPIRATION_HOURS
        value: 24
      - key: OTP_EXPIRATION_MINUTES
        value: 5
      - key: SENTRY_DSN
        value: ""
      - key: TWILIO_ACCOUNT_SID
        value: ""
      - key: TWILIO_AUTH_TOKEN
        value: ""
      - key: TWILIO_PHONE_NUMBER
        value: ""
      - key: SENDGRID_API_KEY
        value: ""
      - key: SENDGRID_FROM_EMAIL
        value: "noreply@msmebazaar.com"

  # MSME Business API (FastAPI)
  - type: web
    name: msmebazaar-msme-api
    env: python
    region: oregon
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/msme-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/msme-api
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /healthz
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: SENTRY_DSN
        value: ""
      - key: AWS_ACCESS_KEY_ID
        value: ""
      - key: AWS_SECRET_ACCESS_KEY
        value: ""
      - key: AWS_BUCKET_NAME
        value: msmebazaar-uploads
      - key: AWS_REGION
        value: us-east-1

  # Valuation API (FastAPI)
  - type: web
    name: msmebazaar-valuation-api
    env: python
    region: oregon
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/valuation-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/valuation-api
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /healthz
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString
      - key: ML_MODEL_PATH
        value: /app/models
      - key: SENTRY_DSN
        value: ""

  # Background Worker for async tasks
  - type: worker
    name: msmebazaar-worker
    env: python
    region: oregon
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/auth-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/auth-api
      python -m celery worker -A tasks.celery_app --loglevel=info
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString
      - key: TWILIO_ACCOUNT_SID
        value: ""
      - key: TWILIO_AUTH_TOKEN
        value: ""
      - key: SENDGRID_API_KEY
        value: ""

  # Cron Job for scheduled tasks
  - type: cron
    name: msmebazaar-scheduler
    env: python
    region: oregon
    plan: standard
    schedule: "0 */6 * * *"  # Every 6 hours
    buildCommand: |
      cd msmebazaar-v2/apps/auth-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/auth-api
      python scripts/cleanup_expired_otps.py
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: msmebazaar-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: msmebazaar-redis
          property: connectionString

databases:
  - name: msmebazaar-postgres
    databaseName: msmebazaar
    user: postgres
    plan: standard
    region: oregon

environments:
  - name: NODE_ENV
    value: production
  - name: PYTHON_VERSION
    value: "3.11"
  - name: NODE_VERSION
    value: "18"