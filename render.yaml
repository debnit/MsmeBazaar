services:
  # PostgreSQL Database
  - type: pserv
    name: vyapaarmitra-postgres
    plan: standard
    region: singapore
    envVars:
      - key: POSTGRES_DB
        value: vyapaarmitra
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        generateValue: true

  # Redis Cache
  - type: redis
    name: vyapaarmitra-redis
    plan: standard
    region: singapore
    maxmemoryPolicy: allkeys-lru

  # Next.js Web Frontend
  - type: web
    name: vyapaarmitra-web
    env: node
    region: singapore
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/web
      npm ci
      npm run build
    startCommand: |
      cd msmebazaar-v2/apps/web
      npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXTAUTH_URL
        value: https://vyapaarmitra.in
      - key: NEXTAUTH_SECRET
        generateValue: true
      - key: NEXT_PUBLIC_API_URL
        value: https://api.vyapaarmitra.in
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: AUTH_API_URL
        value: https://vyapaarmitra-auth-api.onrender.com
      - key: MSME_API_URL
        value: https://vyapaarmitra-msme-api.onrender.com
      - key: VALUATION_API_URL
        value: https://vyapaarmitra-valuation-api.onrender.com

  # Admin Dashboard
  - type: web
    name: vyapaarmitra-admin
    env: node
    region: singapore
    plan: standard
    buildCommand: |
      cd admin-dashboard/backend
      npm ci
      npm run build
    startCommand: |
      cd admin-dashboard/backend
      npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: ADMIN_SECRET_KEY
        generateValue: true

  # Authentication API (FastAPI)
  - type: web
    name: vyapaarmitra-auth-api
    env: python
    region: singapore
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/auth-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/auth-api
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /health
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_ALGORITHM
        value: HS256
      - key: JWT_EXPIRATION_HOURS
        value: 24
      - key: OTP_EXPIRATION_MINUTES
        value: 5
      - key: SENTRY_DSN
        value: ""
      - key: TWILIO_ACCOUNT_SID
        value: ""
      - key: TWILIO_AUTH_TOKEN
        value: ""
      - key: TWILIO_PHONE_NUMBER
        value: ""
      - key: SENDGRID_API_KEY
        value: ""
      - key: SENDGRID_FROM_EMAIL
        value: "noreply@vyapaarmitra.in"
      - key: PROMETHEUS_ENABLED
        value: true

  # MSME Business API (FastAPI)
  - type: web
    name: vyapaarmitra-msme-api
    env: python
    region: singapore
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/msme-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/msme-api
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /health
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: SENTRY_DSN
        value: ""
      - key: AWS_ACCESS_KEY_ID
        value: ""
      - key: AWS_SECRET_ACCESS_KEY
        value: ""
      - key: AWS_BUCKET_NAME
        value: vyapaarmitra-uploads
      - key: AWS_REGION
        value: ap-south-1
      - key: PROMETHEUS_ENABLED
        value: true

  # Valuation API (FastAPI)
  - type: web
    name: vyapaarmitra-valuation-api
    env: python
    region: singapore
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/valuation-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/valuation-api
      uvicorn main:app --host 0.0.0.0 --port $PORT --workers 2
    healthCheckPath: /health
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: ML_MODEL_PATH
        value: /app/models
      - key: SENTRY_DSN
        value: ""
      - key: PROMETHEUS_ENABLED
        value: true

  # Background Worker for async tasks
  - type: worker
    name: vyapaarmitra-worker
    env: python
    region: singapore
    plan: standard
    buildCommand: |
      cd msmebazaar-v2/apps/auth-api
      pip install -r requirements.txt
    startCommand: |
      cd msmebazaar-v2/apps/auth-api
      python -m celery worker -A tasks.celery_app --loglevel=info
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: TWILIO_ACCOUNT_SID
        value: ""
      - key: TWILIO_AUTH_TOKEN
        value: ""
      - key: SENDGRID_API_KEY
        value: ""

  # Daily Report Generation Cron Job
  - type: cron
    name: vyapaarmitra-daily-reports
    env: python
    region: singapore
    plan: standard
    schedule: "0 7 * * *"  # Daily at 7 AM IST
    buildCommand: |
      pip install -r jobs/requirements.txt
    startCommand: |
      python jobs/cron/generate_report_pdf.py
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vyapaarmitra-redis
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        value: ""
      - key: AWS_SECRET_ACCESS_KEY
        value: ""
      - key: AWS_BUCKET_NAME
        value: "vyapaarmitra-reports"
      - key: SENDGRID_API_KEY
        value: ""
      - key: SENTRY_DSN
        value: ""
      - key: REPORT_RECIPIENTS
        value: "admin@vyapaarmitra.in"

  # Google Sheets Sync Cron Job
  - type: cron
    name: vyapaarmitra-sheets-sync
    env: python
    region: singapore
    plan: standard
    schedule: "0 */6 * * *"  # Every 6 hours
    buildCommand: |
      pip install -r jobs/requirements.txt
    startCommand: |
      python jobs/cron/upload_to_drive.py
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: GOOGLE_CREDENTIALS_JSON
        value: ""
      - key: GOOGLE_SPREADSHEET_ID
        value: ""
      - key: GOOGLE_DRIVE_FOLDER_ID
        value: ""
      - key: SENTRY_DSN
        value: ""

  # Database Backup Cron Job
  - type: cron
    name: vyapaarmitra-db-backup
    env: python
    region: singapore
    plan: standard
    schedule: "0 0 * * 0"  # Weekly on Sunday at midnight
    buildCommand: |
      pip install -r jobs/requirements.txt
    startCommand: |
      python jobs/cron/backup_db.py
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: vyapaarmitra-postgres
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        value: ""
      - key: AWS_SECRET_ACCESS_KEY
        value: ""
      - key: AWS_BACKUP_BUCKET
        value: "vyapaarmitra-backups"
      - key: AWS_REGION
        value: "ap-south-1"
      - key: SLACK_WEBHOOK_URL
        value: ""
      - key: TELEGRAM_BOT_TOKEN
        value: ""
      - key: TELEGRAM_CHAT_ID
        value: ""
      - key: BACKUP_RETENTION_DAYS
        value: "30"
      - key: SENTRY_DSN
        value: ""

databases:
  - name: vyapaarmitra-postgres
    databaseName: vyapaarmitra
    user: postgres
    plan: standard
    region: singapore

# Custom domains configuration
domains:
  - name: vyapaarmitra.in
    type: apex
    service: vyapaarmitra-web
  - name: www.vyapaarmitra.in
    type: redirect
    redirectTo: https://vyapaarmitra.in
  - name: admin.vyapaarmitra.in
    type: subdomain
    service: vyapaarmitra-admin
  - name: api.vyapaarmitra.in
    type: subdomain
    service: vyapaarmitra-auth-api

environments:
  - name: NODE_ENV
    value: production
  - name: PYTHON_VERSION
    value: "3.11"
  - name: NODE_VERSION
    value: "18"