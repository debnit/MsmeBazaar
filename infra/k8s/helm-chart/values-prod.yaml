# VyapaarMitra Production Helm Values
# This file contains production-specific configuration overrides

# Global configuration
global:
  imageRegistry: "ghcr.io"
  imagePullSecrets: []
  storageClass: "ssd"

# Common configuration
common:
  labels:
    app: vyapaarmitra
    environment: production
    version: "${VERSION}"
  annotations:
    deployment.kubernetes.io/revision: "${BUILD_NUMBER}"

# Image configuration - will be overridden by CI/CD
image:
  registry: ghcr.io
  repository: your-org/vyapaarmitra
  tag: "latest"  # This will be injected by GitHub Actions
  pullPolicy: Always
  pullSecrets: []

# Web Frontend (Next.js) - Production scaling
web:
  enabled: true
  name: web
  replicaCount: 3
  image:
    repository: web
    tag: "latest"
  port: 3000
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  nodeSelector:
    node-type: "web"
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - web
          topologyKey: kubernetes.io/hostname
  env:
    NODE_ENV: production
    NEXT_TELEMETRY_DISABLED: "1"
    NEXT_PUBLIC_APP_ENV: production
    NEXT_PUBLIC_DOMAIN: vyapaarmitra.in
  envFrom: []

# Auth API (FastAPI) - Production scaling
authApi:
  enabled: true
  name: auth-api
  replicaCount: 3
  image:
    repository: auth-api
    tag: "latest"
  port: 8000
  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  nodeSelector:
    node-type: "api"
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - auth-api
          topologyKey: kubernetes.io/hostname
  env:
    ENVIRONMENT: production
    JWT_ALGORITHM: HS256
    JWT_EXPIRATION_HOURS: "24"
    PROMETHEUS_ENABLED: "true"
    LOG_LEVEL: "INFO"
    WORKERS: "4"
  envFrom: []

# MSME API (FastAPI) - Production scaling
msmeApi:
  enabled: true
  name: msme-api
  replicaCount: 3
  image:
    repository: msme-api
    tag: "latest"
  port: 8001
  service:
    type: ClusterIP
    port: 80
    targetPort: 8001
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  nodeSelector:
    node-type: "api"
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - msme-api
          topologyKey: kubernetes.io/hostname
  env:
    ENVIRONMENT: production
    AWS_REGION: ap-south-1
    PROMETHEUS_ENABLED: "true"
    LOG_LEVEL: "INFO"
    WORKERS: "4"
    FILE_UPLOAD_MAX_SIZE: "50MB"
  envFrom: []

# Valuation API (FastAPI) - Resource intensive
valuationApi:
  enabled: true
  name: valuation-api
  replicaCount: 2
  image:
    repository: valuation-api
    tag: "latest"
  port: 8002
  service:
    type: ClusterIP
    port: 80
    targetPort: 8002
  resources:
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 2000m
      memory: 4Gi
  nodeSelector:
    node-type: "compute"
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - valuation-api
          topologyKey: kubernetes.io/hostname
  env:
    ENVIRONMENT: production
    ML_MODEL_PATH: /app/models
    PROMETHEUS_ENABLED: "true"
    LOG_LEVEL: "INFO"
    WORKERS: "2"
    MODEL_CACHE_SIZE: "1000"
  envFrom: []

# Admin Dashboard
adminDashboard:
  enabled: true
  name: admin-dashboard
  replicaCount: 2
  image:
    repository: admin-dashboard
    tag: "latest"
  port: 3001
  service:
    type: ClusterIP
    port: 80
    targetPort: 3001
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  nodeSelector:
    node-type: "web"
  tolerations: []
  affinity: {}
  env:
    NODE_ENV: production
    ADMIN_PANEL_URL: "https://admin.vyapaarmitra.in"
  envFrom: []

# Background Worker
worker:
  enabled: true
  name: worker
  replicaCount: 2
  image:
    repository: auth-api
    tag: "latest"
  command: ["celery", "-A", "tasks.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  nodeSelector:
    node-type: "worker"
  tolerations: []
  affinity: {}
  env:
    ENVIRONMENT: production
    CELERY_BROKER_URL: "redis://vyapaarmitra-redis-master:6379/0"
    CELERY_RESULT_BACKEND: "redis://vyapaarmitra-redis-master:6379/0"
  envFrom: []

# Horizontal Pod Autoscaler - Production tuned
autoscaling:
  enabled: true
  web:
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  authApi:
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  msmeApi:
    minReplicas: 3
    maxReplicas: 12
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  valuationApi:
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Service configuration
service:
  type: ClusterIP
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"

# Ingress configuration - Production domains
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://vyapaarmitra.in,https://admin.vyapaarmitra.in"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
  hosts:
    - host: vyapaarmitra.in
      paths:
        - path: /
          pathType: Prefix
          service: web
    - host: www.vyapaarmitra.in
      paths:
        - path: /
          pathType: Prefix
          service: web
    - host: admin.vyapaarmitra.in
      paths:
        - path: /
          pathType: Prefix
          service: admin-dashboard
    - host: api.vyapaarmitra.in
      paths:
        - path: /auth
          pathType: Prefix
          service: auth-api
        - path: /msme
          pathType: Prefix
          service: msme-api
        - path: /valuation
          pathType: Prefix
          service: valuation-api
  tls:
    - secretName: vyapaarmitra-tls
      hosts:
        - vyapaarmitra.in
        - www.vyapaarmitra.in
        - admin.vyapaarmitra.in
        - api.vyapaarmitra.in

# ConfigMap configuration - Production settings
configMap:
  enabled: true
  data:
    DOMAIN: "vyapaarmitra.in"
    WEB_URL: "https://vyapaarmitra.in"
    ADMIN_URL: "https://admin.vyapaarmitra.in"
    API_BASE_URL: "https://api.vyapaarmitra.in"
    DEFAULT_TIMEZONE: "Asia/Kolkata"
    DEFAULT_CURRENCY: "INR"
    DEFAULT_LANGUAGE: "en"
    ENVIRONMENT: "production"
    LOG_LEVEL: "INFO"
    METRICS_ENABLED: "true"
    HEALTH_CHECK_ENABLED: "true"
    RATE_LIMIT_ENABLED: "true"
    CORS_ENABLED: "true"
    SESSION_TIMEOUT: "3600"
    FILE_UPLOAD_PATH: "/app/uploads"
    CACHE_TTL: "3600"

# Secrets configuration - Production secrets (values set by CI/CD)
secrets:
  enabled: true
  data:
    # Database - External managed PostgreSQL
    DATABASE_URL: ""  # Will be set via environment or external secret
    POSTGRES_PASSWORD: ""
    
    # Redis - External managed Redis
    REDIS_URL: ""  # Will be set via environment or external secret
    REDIS_PASSWORD: ""
    
    # Authentication secrets
    JWT_SECRET: ""  # Strong production secret
    NEXTAUTH_SECRET: ""  # NextAuth.js secret
    ADMIN_SECRET_KEY: ""  # Admin panel secret
    SESSION_SECRET: ""  # Session encryption secret
    
    # External service credentials
    TWILIO_ACCOUNT_SID: ""
    TWILIO_AUTH_TOKEN: ""
    SENDGRID_API_KEY: ""
    
    # AWS credentials
    AWS_ACCESS_KEY_ID: ""
    AWS_SECRET_ACCESS_KEY: ""
    AWS_BUCKET_NAME: "vyapaarmitra-prod"
    
    # Monitoring
    SENTRY_DSN: ""
    NEW_RELIC_LICENSE_KEY: ""
    
    # Payment gateway
    RAZORPAY_KEY_ID: ""
    RAZORPAY_KEY_SECRET: ""
    
    # Google Services
    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_ANALYTICS_ID: ""

# External PostgreSQL configuration (managed service)
postgresql:
  enabled: false  # Using external managed PostgreSQL
  # External connection details configured via secrets

# External Redis configuration (managed service)
redis:
  enabled: false  # Using external managed Redis
  # External connection details configured via secrets

# ServiceMonitor for Prometheus - Production monitoring
serviceMonitor:
  enabled: true
  namespace: monitoring
  labels:
    app: vyapaarmitra
    environment: production
    monitoring: prometheus
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - vyapaarmitra
      - monitoring

# Network Policies - Production security
networkPolicy:
  enabled: true
  ingress:
    enabled: true
    from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      - namespaceSelector:
          matchLabels:
            name: monitoring
  egress:
    enabled: true
    to:
      - namespaceSelector: {}
      - podSelector: {}

# Pod Disruption Budget - High availability
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Security Context - Production hardening
securityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Pod Security Context
podSecurityContext:
  enabled: true
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

# Health check configuration - Production tuned
livenessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Persistence for shared volumes - Production storage
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 100Gi
  annotations:
    volume.beta.kubernetes.io/storage-class: "fast-ssd"

# Node selection and scheduling
nodeSelector:
  node-type: "general"

tolerations:
  - key: "vyapaarmitra.in/dedicated"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: node-type
          operator: In
          values:
          - "general"
          - "compute"

# Pod annotations for monitoring and service mesh
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8000"
  prometheus.io/path: "/metrics"
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  sidecar.istio.io/inject: "false"  # Disable if not using Istio

# Additional labels for production
labels:
  environment: production
  app.kubernetes.io/part-of: vyapaarmitra
  app.kubernetes.io/managed-by: helm
  app.kubernetes.io/version: "${VERSION}"

# Additional annotations
annotations:
  deployment.kubernetes.io/revision: "${BUILD_NUMBER}"
  kubernetes.io/change-cause: "Deployed via CI/CD pipeline"

# Resource quotas and limits
resourceQuotas:
  enabled: true
  hard:
    requests.cpu: "20"
    requests.memory: "40Gi"
    limits.cpu: "40"
    limits.memory: "80Gi"
    persistentvolumeclaims: "10"

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: "30d"
  storageClass: "standard"
  size: "50Gi"